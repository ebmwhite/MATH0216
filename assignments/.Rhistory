x^2 #x to the power of 2
y <- x*2 #multiply
x/2 #divide
x^2 #x to the power of 2
y <- x*2 #multiply
# note that because value is assigned to y, it won't print out
y #prints out the value of y
x/2 #divide
x^2 #x to the power of 2
# c()
heights <- c(67, 100, 34, 78, 80)
heights[3]
heights <- c(heights, 90)
heights <- c(heights, 90)
heights
# c() function: concatenate
heights <- c(67, 100, 34, 78, 80)
heights <- c(heights, 90)
heights
airbnb <- read.csv(NYCairbnb2019.csv)
airbnb <- read.csv("NYCairbnb2019.csv")
View(airbnb)
library("openintro")
cars
install.packages("openintro")
library("openintro")
cars
dim(airbnb)
names(airbnb)
airbnb$latitude
airbnb$latitude
airbnb[,3]
airbnb[,"latitude"]
attach(airbnb)
latitude
airbnb$latitude
airbnb[,3]
airbnb[,"latitude"]
attach(airbnb)
latitude
airbnb$latitude
airbnb[,3]
airbnb[,"latitude"]
attach(airbnb)
latitude
airbnb$latitude
airbnb[,3]
airbnb[,"latitude"]
attach(airbnb)
latitude
airbnb$latitude
airbnb[,3]
airbnb[,"latitude"]
attach(airbnb)
latitude
mean(airbnb$price)
mean(airbnb$price)
median(airbnb$price)
mean(airbnb$price)
median(airbnb$price)
sd(airbnb$price) #standard deviation
tapply(airbnb$price, airbnb$neighbourhood_group, mean)
tapply(airbnb$price, airbnb$neighbourhood_group, mean)
tapply(airbnb$price, airbnb$room_type, mean)
airbnb[airbnb$price >= 8000,]
airbnb[airbnb$neighbourhood_group=="Manhatten"]
airbnb[airbnb$neighbourhood_group=="Manhattan",]
hist(airbnb$price)
hist(airbnb$price)
plot(airbnb$reviews_per_month, airbnb$price)
install.packages("tidyverse")
?select
airbnb <- read.csv("NYCairbnb2019.csv")
is.factor(airbnb$neighbourhood_group)
is.factor(airbnb$room_type)
levels(airbnb$room_type)
names(airbnb)
cars
names(cars)
library("openintro")
cars
2+2
x<-4
x<-56
y <- x*2 #multiply
# note that because value is assigned to y, it won't print out
y #prints out the value of y
x/2 #divide
x^2 #x to the power of 2
# c() function: concatenate
heights <- c(67, 100, 34, 78, 80)
heights[3]
heights <- c(heights, 90)
heights
airbnb <- read.csv("NYCairbnb2019.csv")
library("openintro")
cars
# dim() spits out dimensions of a dataframe
dim(airbnb)
mean(airbnb$price)
median(airbnb$price)
sd(airbnb$price) #standard deviation
# calculates the mean price, broken down by neighbourhood group
tapply(airbnb$price, airbnb$neighbourhood_group, mean)
#calculates the mean price, broken down by room type
tapply(airbnb$price, airbnb$room_type, mean)
# prints out all the rows where the price is more than 8000
airbnb[airbnb$price >= 8000,]
hist(airbnb$price)
plot(airbnb$reviews_per_month, airbnb$price)
names(cars)
head(cars)
is.factor(small)
is.factor(cars$type)
levels(cars$type)
names(cars)
plot(cars$mpgCity, cars$weight)
plot(cars$mpgCity, cars$weight)
boxplot(cars$mpgCity)
plot(cars$mpgCity, cars$weight)
boxplot(cars$mpgCity ~ cars$type)
#to check whether something is a factor
is.factor(cars$type)
# to make something a factor
cars$type <- as.factor(cars$type)
#to see the levels
levels(cars$type)
# to make something a factor
cars$type <- factor(cars$type)
#to check whether something is a factor
is.factor(cars$type)
#to change the order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large", ordered=T))
#to see the levels
levels(cars$type)
#to see the number of levels
nlevels(cars$type)
#to change the order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"))
#to see the levels
levels(cars$type)
#to see the number of levels
nlevels(cars$type)
#to change the order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
#to see the levels
levels(cars$type)
#to see the number of levels
nlevels(cars$type)
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
min(cars$type)
mean(airbnb$number_of_reviews)
View(airbnb)
mean(airbnb$reviews_per_month)
# use arguement na.rm to remove NAs
mean(airbnb$reviews_per_month, na.rm=T)
# use arguement na.rm to remove NAs
mean(airbnb$reviews_per_month, na.rm=T)
#OR
# use function na.omit() to return a vector without NAs, then take the mean
mean(na.omit(airbnb$reviews_per_month))
# to rename factors
car$type[car$type == "large"]<-"big"
# to rename factors
cars$type[cars$type == "large"]<-"big"
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
min(cars$type)
# to rename factors
cars$type[cars$type == "large"]<-"big"
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
min(cars$type)
# to rename factors
cars$type[cars$type == "large"]<-"big"
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
min(cars$type)
View(cars)
# to rename factors
cars$type[cars$type == "large"] <- 'big'
# to rename factors
cars$type[cars$type == "large"] <- big
# to rename factors
cars$type[cars$type == "large"] <- "big"
#to change the order or to give order
cars$type <- factor(cars$type, levels = c("small", "midsize", "large"), ordered=T)
min(cars$type)
View(cars)
table(cars$type)
#to see the levels
levels(cars$type)
#to see the number of levels
nlevels(cars$type)
#to check whether something is a factor
is.factor(cars$type)
# to make something a factor
cars$type <- factor(cars$type)
#to see the levels
levels(cars$type)
#to see the number of levels
nlevels(cars$type)
# to rename factors
cars$type[cars$type == "large"] <- "big"
library(cars)
library(openintro)
cars
table(cars$type)
?levels
levels(cars$type)
sample(a:z)
c(a:z)
c("a":"z")
c(A:Z)
letters
sample(letters)
set.seed(1)
sample(letters)
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points))
set.seed(1)
totals$key <- distinctColorPalette(26)
total$key2 <- sample(letters)
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points))
set.seed(1)
totals$key <- distinctColorPalette(26)
totals$key2 <- sample(letters)
total_sort<- totals %>%
select(total, key) %>%
arrange(-total)
View(totals)
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points))
set.seed(1)
totals$key <- distinctColorPalette(26)
set.seed(1)
totals$key2 <- sample(letters)
total_sort<- totals %>%
select(total, key) %>%
arrange(-total)
View(totals)
i
for(i in totals$Name){
test <- totals %>%
filter(Name == i) %>%
write.csv(test, paste(test$Last[1],"csv", sep="."))
}
for(i in totals$Name){
test <- totals %>%
filter(Name == i) %>%
write.csv(test, paste(test$key2[1],"csv", sep="."))
}
test <- totals %>%
filter(Name == "Chung, Jay-Ho") %>%
write.csv(test, paste(test$key2[1],"csv", sep="."))
test <- totals %>%
filter(Name == "Chung, Jay-Ho")
write.csv(test, paste(test$key2[1],"csv", sep="."))
for(i in totals$Name){
test <- totals %>%
filter(Name == "Chung, Jay-Ho")
write.csv(test, paste(test$key2[1],"csv", sep="."))
}
View(test)
View(test)
test <- data %>%
filter(Name == "Chung, Jay-Ho")
View(test)
test <- data %>%
filter(Name == "Chung, Jay-Ho")
key <- totals %>%
filter(Name == "Chung, Jay-Ho")
View(key)
test <- data %>%
filter(Name == "Chung, Jay-Ho")
key <- totals %>%
filter(Name == "Chung, Jay-Ho")
write.csv(test, paste(key$key2[1],"csv", sep="."))
test <- data %>%
filter(Name == "Chung, Jay-Ho")
key <- totals %>%
filter(Name == "Chung, Jay-Ho")
write.csv(test, paste(key$key[1],"csv", sep="."))
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points))
set.seed(1)
totals$key <- distinctColorPalette(26)
set.seed(1)
totals$key2 <- sample(letters)
total_sort<- totals %>%
select(total, key2) %>%
arrange(-total)
kable(total_sort) %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
values <- totals %>%
filter(Name == i)
View(values)
paste("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far.", \n, "In the future, if you want to look up your score: ")
paste("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far.", <br>, "In the future, if you want to look up your score: ")
paste("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far. In the future, if you want to look up your score: ")
cat("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far. In the future, if you want to look up your score: ", \n, "test")
paste("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far. In the future, if you want to look up your score: ", \n, "test")
paste("As of today, you have earned", values$total,   "participation points.  A more detailed list of your points and how you earned them is available in the attached .csv file. Please let me know if you think I’m missing any points you have earned thus far. In the future, if you want to look up your score: test")
values <- totals %>%
filter(Name == i)
totals %>%
filter(Name == i)
totals %>%
filter(Name == i)
for(i in totals$Name){
test <- data %>%
filter(Name == "i")
key <- totals %>%
filter(Name == "i")
write.csv(test, paste(key$key[1],"csv", sep="."))
}
for(i in totals$Name){
test <- data %>%
filter(Name == "i")
key <- totals %>%
filter(Name == "i")
write.csv(test, paste(key$key[1],"csv", sep="."))
}
i
test <- data %>%
filter(Name == "i")
key <- totals %>%
filter(Name == "i")
write.csv(test, paste(key$key[1],"csv", sep="."))
View(key)
View(test)
i="Chung, Jay-Ho"
test <- data %>%
filter(Name == "i")
key <- totals %>%
filter(Name == "i")
write.csv(test, paste(key$key[1],"csv", sep="."))
View(key)
test <- data %>%
filter(Name == "i")
View(test)
i
i="Wang, Ivy"
test <- data %>%
filter(Name == "i")
View(test)
View(totals)
key
key$key
totals$Name
i="Van Artsdalen, Kathryn"
for(i in totals$Name){
test <- data %>%
filter(Name == i)
key <- totals %>%
filter(Name == i)
write.csv(test, paste(key$key,"csv", sep="."))
}
key$key<-sub(".", "", key$key)
View(key)
for(i in totals$Name){
test <- data %>%
filter(Name == i)
key <- totals %>%
filter(Name == i)
key$key<-sub(".", "", key$key)
write.csv(test, paste(key$key,"csv", sep="."))
}
View(totals)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
View(data)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
View(data)
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points))
View(totals)
View(total_sort)
library(nycflights13)
tblflights <- tbl_df(flights)
View(tblflights)
write.csv(tblflights, "tblflights.csv")
setwd("~/Google Drive/MATH0216/GitHub/assignments")
write.csv(tblflights, "tblflights.csv")
?flights
levels(tblflights$carrier)
table(tblflights$carrier)
tblflights %>%
select(month, carrier, month, dep_delay)
tblflights %>%
select(month, carrier, month, dep_delay) %>%
group_by(month) %>%
summarize(avg_delay = mean(dep_delay))
tblflights %>%
select(month, carrier, month, dep_delay) %>%
group_by(month) %>%
summarize(avg_delay = mean(dep_delay, na.rm=T))
tblflights %>%
select(month, carrier, month, dep_delay) %>%
group_by(month, carrier) %>%
summarize(avg_delay = mean(dep_delay, na.rm=T))
tbldata %>%
filter(origin=="JFK", dest == "BOS")
tblflights %>%
filter(origin=="JFK", dest == "BOS")
tblflights %>%
filter(origin=="JFK", dest == "LAX")
tblflights %>%
filter(origin=="JFK", dest == "LAX") %>%
group_by(carrier) %>%
summarize(average_delay = mean(arr_delay))
tblflights %>%
filter(origin=="JFK", dest == "LAX") %>%
group_by(carrier) %>%
summarize(average_delay = mean(arr_delay, na.rm=T))
tblflights %>%
select(month, carrier, dep_delay)
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
spread(carrier, month)
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay))
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T))
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay)
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
kable()
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
xtable()
library(xtable)
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
xtable()
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
xtable()
?xtable
?kable
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
kable()
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = mean(dep_delay, na.rm=T)) %>%   spread(month, avg.delay) %>%
kable()
??kable
tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = round(mean(dep_delay, na.rm=T),2)) %>%   spread(month, avg.delay) %>%
kable()
table <- tblflights %>%
select(month, carrier, dep_delay) %>%
group_by(carrier, month) %>%
summarize(avg.delay = round(mean(dep_delay, na.rm=T),2)) %>%   spread(month, avg.delay)
print(xtable(table), type="html", comment=FALSE)
#To load directly from `nycflights13` package
#make sure you have ran install.packages("nycflights13")
library(nycflights13)
tblflights <- tbl_df(flights)
#OR
# to load from local .csv file
#tblflights <- read.csv("tblflights.csv")
