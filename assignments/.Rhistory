arrange(-price) %>%
filter(color != "J" & color != "I") %>%
head(1)
diamonds %>%
filter(carat > 2) %>%
arrange(-price) %>%
filter(color != "J" , color != "I") %>%
head(1)
#many possible different answers (see Slack)
diamonds %>%
filter(carat > 2) %>%
filter(color != "I",color != "J") %>%
arrange(-price)
head(1)
#many possible different answers (see Slack)
diamonds %>%
filter(carat > 2) %>%
filter(color != "I",color != "J") %>%
arrange(-price)
head()
#many possible different answers (see Slack)
diamonds %>%
filter(carat > 2) %>%
filter(color != "I",color != "J") %>%
filter(price == max(price))
diamonds %>%
filter(carat > 2) %>%
arrange(-price) %>%
filter(color != "J" & color != "I") %>%
head(1)
View(MLBdata)
MLBdata %>%
filter(position.x == "Pitcher")
# you will need to update the file path to reflect where you saved the UScereal.csv file
UScereal<- read.csv("UScereal.csv")
# you will need to update the file path to reflect where you saved the UScereal.csv file
cereal<- read.csv("cereal.csv")
# you will need to update the file path to reflect where you saved the cereal.csv file
cereal<- read.csv("cereal.csv")
mean(cereal$fiber)
#many possible answers here
#option 1
which.min(cereal$sugars)
#many possible answers here
#option 1
cereal[which.min(cereal$sugars),]
#another option
min(cereal$sugars) #and then use looking at dataset to determine that it is
#many possible answers here
#an option
cereal[which.min(cereal$sugars),]
#another option
min(cereal$sugars) #and then use looking at dataset to determine that it is Quaker Oatmeal
#another option
sort(cereal$sugars)[1]
#many possible answers here
#an option
cereal[which.min(cereal$sugars),]
#another option
min(cereal$sugars) #and then use looking at dataset to determine that it is Quaker Oatmeal
#many possible answers here
#an option
cereal[which.min(cereal$sugars),]
#another options
cereal[which.min(cereal$sugars),1]
#another option
min(cereal$sugars) #and then use looking at dataset to determine that it is Quaker Oatmeal
#many options here
#an option
cereal[cereal$sugars<=1,]
#many options here
#an option
cereal[cereal$sugars<=1,]
#another option
cereal[cereal$sugars<=1,1]
#many options here
#an option
K <- cereal[cereal$mfr=="K",]
mean(K$sugars)
#another option
tapply(cereal$sugars, cereal$mfr, mean) #then look to see what kelloggs is
tapply(cereal$sugars, cereal$mfr, mean)
library(tidyverse)
data <- read.csv("http://ryanthornburg.com/wp-content/uploads/2015/05/UNC_Salares_NandO_2015-05-06.csv")
View(diamonds)
View(MLBdata)
library(readr)
NYCairbnb2019 <- read_csv("~/Google Drive/MATH0216/data/NYCairbnb2019.csv")
View(NYCairbnb2019)
library(tidyverse)
NYCairbnb2019 <- read.csv("~/Google Drive/MATH0216/data/NYCairbnb2019.csv")
library(tidyverse)
airbnb <- read.csv("~/Google Drive/MATH0216/data/NYCairbnb2019.csv")
View(airbnb)
airbnb %>%
group_by(neighbourhood_group, roomtype)
airbnb %>%
group_by(neighbourhood_group, room_type)
summarise(mean.price=mean(price))
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price))
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price))
head(15)
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price)) %>%
head(15)
library(xtable)
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price)) %>%
head(15) %>%
xtable()
library(xtable)
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price)) %>%
head(15) %>%
xtable()
library(kable)
library(kableExtra)
library(kableExtra)
airbnb %>%
group_by(neighbourhood_group, room_type) %>%
summarize(mean.price=mean(price)) %>%
head(15) %>%
kable()
library(tidyverse)
gapminder <- read.csv("https://raw.githubusercontent.com/syntagmatic/gapminder-csv/master/gapminder.csv")
library(tidyverse)
gapminder <- read.csv("https://raw.githubusercontent.com/syntagmatic/gapminder-csv/master/gapminder.csv")
View(gapminder)
View(gapminder)
names(gapminder)
gapminder$congenital_deaths_in_newborn_total_deaths
data <- read.csv("https://media.githubusercontent.com/media/WillKoehrsen/Data-Analysis/master/pairplots/data/gapminder_data.csv")
library(tidyverse)
gapminder <- read.csv("https://media.githubusercontent.com/media/WillKoehrsen/Data-Analysis/master/pairplots/data/gapminder_data.csv")
View(gapminder)
gapminder %>%
filter(continent =="Africa", year =="2002")
gapminder %>%
filter(continent =="Africa", year =="2002") %>%
summarize(mean.gdp == mean(gdpPercap))
gapminder %>%
filter(continent =="Africa", year =="2002") %>%
summarize(mean == mean(gdpPercap))
gapminder %>%
filter(continent =="Africa", year =="2002") %>%
summarize(meanGDP = mean(gdpPercap))
gdp_pop_bycontinents_byyear <- gapminder %>%
mutate(gdp_billion = gdpPercap*pop/10^9) %>%
group_by(continent,year) %>%
summarize(mean_gdpPercap = mean(gdpPercap),
sd_gdpPercap = sd(gdpPercap),
mean_pop = mean(pop),
sd_pop = sd(pop),
mean_gdp_billion = mean(gdp_billion),
sd_gdp_billion = sd(gdp_billion))
View(gdp_pop_bycontinents_byyear)
View(gdp_pop_bycontinents_byyear)
View(gdp_pop_bycontinents_byyear)
setwd("~/Google Drive/MATH0216/GitHub/activities")
write.csv(gdp_pop_bycontinents_byyear, "gdp_pop_bycontinents_byyear.csv")
write.csv(gapminder, "gapminder.csv")
library(tidyverse)
gapminder <- read.csv("gapminder.csv")
gdp_pop_bycontinents_byyear <- read.csv("gdp_pop_bycontinents_byyear.csv")
View(gapminder)
View(gdp_pop_bycontinents_byyear)
data <- read.csv("http://ryanthornburg.com/wp-content/uploads/2015/05/UNC_Salares_NandO_2015-05-06.csv")
data <- read.csv("http://ryanthornburg.com/wp-content/uploads/2015/05/UNC_Salares_NandO_2015-05-06.csv")
data <- read.csv("http://ryanthornburg.com/wp-content/uploads/2015/05/UNC_Salares_NandO_2015-05-06.csv")
View(data)
UNCdata <- read.csv("http://ryanthornburg.com/wp-content/uploads/2015/05/UNC_Salares_NandO_2015-05-06.csv")
View(UNCdata)
setwd("~/Google Drive/MATH0216/GitHub/assignments")
write.csv(UNCdata, "UNCdata.csv")
names(gapminder)
nrows(gapminder)
names(gapminder)
nrow(gapminder)
Africa <- gapminder %>%
filter(continent=="Africa")
Africa <- gapminder %>%
filter(continent=="Africa")
nrow(Africa)
NorthAmerica <- gapminder %>%
filter(country=="Canada"|country =="Mexico"|country=="US")
levels(gapminder$country)
NorthAmerica <- gapminder %>%
filter(country=="Canada"|country =="Mexico"|country=="US")
NorthAmerica <- gapminder %>%
filter(country=="Canada"|country =="Mexico"|country=="United States")
NorthAmerica <- gapminder %>%
filter(country=="Canada"|country =="Mexico"|country=="United States") %>%
select(country, year, population)
NorthAmerica <- gapminder %>%
filter(country=="Canada"|country =="Mexico"|country=="United States") %>%
select(country, year, pop)
View(NorthAmerica)
View(gapminder)
gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
sort(mean.life.expectancy)
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
sort(mean.life.expectancy)
names(values)
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
sort(mean.life.expectancy)
values
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
arrange(mean.life.expectancy)
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
arrange(mean.life.expectancy)
summarize(min.mean.life.expectancy = min(mean.life.expectancy),
max.mean.life.expectancy = max(mean.life.expectancy),)
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
arrange(mean.life.expectancy) %>%
summarize(min.mean.life.expectancy = min(mean.life.expectancy),
max.mean.life.expectancy = max(mean.life.expectancy),)
values <- gapminder %>%
group_by(country) %>%
summarize(mean.life.expectancy = mean(lifeExp))
values %>%
arrange(mean.life.expectancy) %>%
summarize(min.mean.life.expectancy = min(mean.life.expectancy),
max.mean.life.expectancy = max(mean.life.expectancy),)
gapminder %>%
filter(year==2002)
gapminder %>%
filter(year==2002) %>%
group_by(continent) %>%
summarize(sum.pop = sum(pop))
gapminder %>%
filter(year==2002) %>%
group_by(continent) %>%
summarize(sum.pop = sum(pop, na.rm=T))
gapminder %>%
filter(continent = "Africa", year=2002) %>%
View(gapminder)
gapminder %>%
filter(continent = "Africa", year=2002) %>%
summarize(mean.gdp = mean(gdpPercap))
gapminder %>%
filter(continent == "Africa", year==2002) %>%
summarize(mean.gdp = mean(gdpPercap))
gapminder %>%
filter(continent == "Africa", year==2002) %>%
group_by(country) %>%
summarize(mean.gdp = mean(gdpPercap))
gapminder <- gapminder %>%
mutate(gdp_billion = gdpPercap*pop/10^9)
View(gapminder)
gdp_pop_bycontinents_byyear <- read.csv("gdp_pop_bycontinents_byyear.csv")
View(gdp_pop_bycontinents_byyear)
gdp_pop_bycontinents_byyear <- gapminder %>%
group_by(continent,year) %>%
summarize(mean_gdpPercap = mean(gdpPercap),
sd_gdpPercap = sd(gdpPercap),
mean_pop = mean(pop),
sd_pop = sd(pop),
mean_gdp_billion = mean(gdp_billion),
sd_gdp_billion = sd(gdp_billion))
.255^2
View(UNCdata)
#load in the dataset
artists <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/moma_artists_jan2017.csv')
View(artists)
data <- data.frame(
name = c("Wilbur", "Petunia", "Gregory"),
a = c(67, 80, 64),
b = c(56, 90, 50)
)
View(data)
data %>%
gather(drug, heartrate, a:b)
?gather
#gather(data, key = "key", value = "value")
data %>%
gather(drug, heartrate, a:b)
#gather(data, key = "key", value = "value")
data_long <- data_wide %>%
gather(drug, heartrate, a:b)
#create a wide dataset
data_wide <- data.frame(
name = c("Wilbur", "Petunia", "Gregory"),
a = c(67, 80, 64),
b = c(56, 90, 50)
)
#gather(data, key = "key", value = "value")
data_long <- data_wide %>%
gather(drug, heartrate, a:b)
#create a wide dataset
set.seed(1)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 20, 1),
Y = rnorm(10, 20, 2),
Z = rnorm(10, 20, 4)
)
stocks
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
stocks_long <- stocks_wide %>%
gather(key=stock, value=price, X, Y, Z)
#create a wide dataset
set.seed(1)
stocks_wide <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 20, 1),
Y = rnorm(10, 20, 2),
Z = rnorm(10, 20, 4)
)
stocks_wide
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
stocks_long <- stocks_wide %>%
gather(key=stock, value=price, X, Y, Z)
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
stocks_long <- stocks_wide %>%
gather(key=stock, value=price, X, Y, Z)
stocks_long
#Ex:
stocks_wide %>%
gather(stock,price,X:Z)%>%
group_by(stock) %>%
summarise(min = min(price), max = max(price))
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
data_back_to_wide <- data_long %>%
spread(stock, price)
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
stocks_long <- stocks_wide %>%
gather(key=stock, value=price, X, Y, Z)
stocks_long
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
data_back_to_wide <- data_long %>%
spread(key=stock, value= price)
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
stocks_long <- stocks_wide %>%
gather(key=stock, value=price, X, Y, Z)
stocks_long
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
data_back_to_wide <- stocks_long %>%
spread(key=stock, value= price)
data_back_to_wide
?seperate
library(tidyr)
seperate
?seperate
??seperate
#to split up date
data_wide <- data_wide %>%
seperate(date, sep='-')
#to split up date
data_wide <- data_wide %>%
separate(date, sep="-")
?separate
#separate(data, col, into, sep)
#to split up date
data_wide <- data_wide %>%
separate(date, c("year", "month", "day"),sep="-")
#separate(data, col, into, sep)
#to split up date
data_wide <- data_wide %>%
separate(time, c("year", "month", "day"),sep="-")
#separate(data, col, into, sep)
#to split up date
data_wide <- data_wide %>%
separate(time, sep="-")
View(data_wide)
View(data_long)
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
stocks_back_to_wide <- stocks_long %>%
spread(key=stock, value= price)
stocks_back_to_wide
#separate(data, col, into, sep)
#to split up date
stocks_wide <- stocks_wide %>%
separate(time, sep="-")
#separate(data, col, into, sep)
#to split up date
stocks_wide <- stocks_wide %>%
separate(time,c("year", "month", "day"), sep="-")
#separate(data, col, into, sep)
#to split up date
stocks_wide <- stocks_wide %>%
separate(time,c("year", "month", "day"), sep="-")
stocks_wide
unite
?unite
#unite(data, col, sep)
stocks_wide <- stocks_wide %>%
unite(time,c("year", "month", "day"), sep="-")
stocks_wide
#unite(data, col, sep)
stocks_wide <- stocks_wide %>%
unite(time,c("year", "month", "day"), sep="-")
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("NutritionGraph.png")
knitr::opts_chunk$set(echo = FALSE)
#create a wide dataset
set.seed(1)
stocks_wide <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 20, 1),
Y = rnorm(10, 20, 2),
Z = rnorm(10, 20, 4)
)
stocks_wide
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
#stocks_wide %>%
#  gather(key = stock, value = price, X, Y,Z)
stocks_wide %>%
gather(key = stock, value = price, X:Z)
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
#stocks_wide %>%
#  gather(key = stock, value = price, X, Y,Z)
stocks_long <- stocks_wide %>%
gather(key = stock, value = price, X:Z)
# gather(.data = data, key, value)
# OR
# data %>%
#   gather(key = "key", value = "value")
#stocks_wide %>%
#  gather(key = stock, value = price, X, Y,Z)
stocks_long <- stocks_wide %>%
gather(key = stock, value = price, X:Z)
stocks_long
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
data_long %>%
spread(stock, price)
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
stocks_long %>%
spread(stock, price)
# spread(.data=data, key, value)
# OR
# data %>%
#     spread(key, value)
stocks_long %>%
spread(key=stock, value=price)
#Ex:
stocks_wide %>%
gather(stock, price, X, Y, Z) %>%
group_by(stock) %>%
sumarise(min=min(price), max=max(price))
#Ex:
stocks_wide %>%
gather(stock, price, X, Y, Z) %>%
group_by(stock) %>%
summarise(min=min(price), max=max(price))
?n
View(UNCdata)
