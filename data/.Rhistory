bottom <- aldrin %>%
filter(depth=='bottom')
plot3 <- ggplot(bottom, aes(x=aldrin)) +
geom_histogram(fill="dodgerblue3", bins=5) +
ggtitle("Samples at Bottom") +
xlab("Aldrin levels") +
theme_minimal()
grid.arrange(plot1, plot2, plot3, ncol=3)
surface <- aldrin %>%
filter(depth=='surface')
plot1 <- ggplot(surface, aes(sample=aldrin)) +
stat_qq() +
stat_qq_line() +
ggtitle("Samples at Surface") +
theme_minimal()
middepth <- aldrin %>%
filter(depth=='middepth')
plot2 <- ggplot(middepth, aes(x=aldrin)) +
geom_histogram(fill="dodgerblue3", bins=5) +
ggtitle("Samples at Middepth") +
xlab("Aldrin levels") +
theme_minimal()
bottom <- aldrin %>%
filter(depth=='bottom')
plot3 <- ggplot(bottom, aes(x=aldrin)) +
geom_histogram(fill="dodgerblue3", bins=5) +
ggtitle("Samples at Bottom") +
xlab("Aldrin levels") +
theme_minimal()
grid.arrange(plot1, plot2, plot3, ncol=3)
surface <- aldrin %>%
filter(depth=='surface')
plot1 <- ggplot(surface, aes(sample=aldrin)) +
stat_qq() +
stat_qq_line() +
ggtitle("Samples at Surface") +
theme_minimal()
middepth <- aldrin %>%
filter(depth=='middepth')
plot2 <- ggplot(middepth, aes(sample=aldrin)) +
stat_qq() +
stat_qq_line() +
ggtitle("Samples at Middepth") +
theme_minimal()
bottom <- aldrin %>%
filter(depth=='bottom')
plot3 <- ggplot(bottom, aes(sample=aldrin)) +
stat_qq() +
stat_qq_line() +
ggtitle("Samples at Bottom") +
theme_minimal()
grid.arrange(plot1, plot2, plot3, ncol=3)
mean(aldrin$aldrin)
1-(0.95)^3
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
attach(all_data)
View(all_data)
library(xtable)
means <- tapply(Day_Zero_Number_of_Intrusions, Condition, mean)
knitr::kable(means, col.names="Mean number of intrusions on Day 0", caption="Table 1")
tapply(Day_Zero_Number_of_Intrusions, Condition, mean)
boxplot(Day_Zero_Number_of_Intrusions~ Condition)
fit<-aov(Day_Zero_Number_of_Intrusions ~ Condition, data=all_data)
summary(fit)
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
attach(all_data)
View(all_data)
boxplot(Day_Zero_Number_of_Intrusions ~ Condition)
boxplot(Day_Zero_Number_of_Intrusions ~ Condition)
tapply(Day_Zero_Number_of_Intrusions, Condition, mean)
fit<-aov(Day_Zero_Number_of_Intrusions ~ Condition, data=all_data)
summary(fit)
aov(Day_Zero_Number_of_Intrusions ~ Condition, data=all_data)
fit<-aov(Day_Zero_Number_of_Intrusions ~ Condition, data=all_data)
summary(fit)
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
View(all_data)
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
View(all_data)
boxplot(all_data$Day_Zero_Number_of_Intrusions ~ all_data$Condition)
boxplot(all_data$Day_Zero_Number_of_Intrusions ~ all_data$Condition, xlab="Conditions", ylab="Number of Intrusions (Day 0)", main="Number of Intrusions (Day 0) by Condition")
boxplot(all_data$Day_Zero_Number_of_Intrusions ~ all_data$Condition, xlab="Conditions", ylab="Number of Intrusions (Day 0)", main="Number of Intrusions (Day 0) by Condition", col="blue")
tapply(all_data$Day_Zero_Number_of_Intrusions, all_data$Condition, mean)
aov(all_data$Day_Zero_Number_of_Intrusions ~ all_data$Condition)
fit<-aov(all_data$Day_Zero_Number_of_Intrusions ~ all_data$Condition)
summary(fit)
house <- read.csv("ebmwhite.github.io/MATH0216/data/house.csv")
house <- read.csv("ebmwhite.github.io/MATH0216/data/HousePrices.csv")
house <- read.csv("ebmwhite.github.io/MATH0216/data/HousePrices.csv")
house <- read.csv("ebmwhite.github.io/MATH0216/data/HousePrices.csv")
house <- read.csv("ebmwhite.github.io/MATH0216/data/HousePrices.csv")
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
house %>%
ggplot(aes(x = SalePrice)) +
geom_histogram()
View(house)
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
house %>%
ggplot(aes(x = Price)) +
geom_histogram()
house %>%
ggplot(aes(x = Price)) +
geom_histogram(bins=10)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point()
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
head(house)
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
head(house)
house %>%
ggplot(aes(x = Price)) +
geom_histogram(bins=10)
model <- lm(Price ~ Size, data = house)
model <- lm(Price ~ Size, data = house)
model
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = model$coefficients[2],
intercept = model$coefficients[1],
color = "red",
size = 3)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = model$coefficients[2],
intercept = model$coefficients[1],
color = "red",
size = 2)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = model$coefficients[2],
intercept = model$coefficients[1],
color = "red",
size = 1)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
theme_light()
house %>%
ggplot(aes(x = Price)) +
geom_histogram(bins=10) +
theme_light()
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = model$coefficients[2],
intercept = model$coefficients[1],
color = "red",
size = 1) +
theme_light()
model <- lm(Price ~ Size, data = house)
model
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = model$coefficients[2],
intercept = model$coefficients[1],
color = "red",
size = 1) +
theme_light()
predict.lm(model, data.frame(Size = 3000))
predict.lm(model, data.frame(Size = 2000))
View(house)
model2 <- lm(Price ~ Size + Bedrooms)
model2 <- lm(Price ~ Size + Bedrooms, data=house)
View(house)
model2 <- lm(Price ~ Size + Beds, data=house)
model2 <- lm(Price ~ Size + Beds + Baths, data=house)
model2 <- lm(Price ~ Size + Beds + Baths, data=house)
model2 <- lm(Price ~ Size + Beds + Baths, data=house)
model2
model2 <- lm(Price ~ Size + Beds + Baths, data=house)
model2
summary(model2)
summary(model1)
summary(model)
summary(model)$r.squared
summary(model2)$r.squared
AIC(model)
AIC(model2)
step(model2)
model2 <- lm(Price ~ Size + Beds + Baths + New, data=house)
model2
model2 <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(model2)
summary(model)$r.squared
summary(model2)$r.squared
AIC(model)
AIC(model2)
step(model2)
model_full <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(model_full)
summary(model)$r.squared
summary(model_full)$r.squared
AIC(model)
AIC(model_full)
step(model_full)
step(model_full)
library(tidyverse)
library(openintro)
email
library(openintro)
data("email")
head(email)
View(email)
viagra.model <- glm(factor(spam) ~ viagra,
data = email,
family = "binomial")
summary(viagra.model)
table(email$spam, email$viagra)
winner.model <-glm(factor(spam) ~ winner,
data = email,
family = "binomial")
summary(winner.model)
?email
plot(model)
plot(fit)
plot(model)
plot(model)[2]
plot(model)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
summary(full.model)
viagara.model <-glm(factor(spam) ~ viagara,
data = email,
family = "binomial")
viagara.model <-glm(factor(spam) ~ Viagara,
data = email,
family = "binomial")
View(email)
viagra.model <-glm(factor(spam) ~ Viagra,
data = email,
family = "binomial")
viagra.model <-glm(factor(spam) ~ viagra,
data = email,
family = "binomial")
summary(viagra.model)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
summary(full.model)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
step(full.model)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
best.model <- step(full.model)
summary(best.model)
model_full <- lm(Price ~ Size + Beds + Baths + New, data=house) %>%
summary()
winner.model <-glm(factor(spam) ~ winner,
data = email,
family = "binomial") %>%
summary()
viagra.model <-glm(factor(spam) ~ viagra,
data = email,
family = "binomial") %>%
summary()
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial") %>%
stepAIC()
full.model <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(full.model)
AIC(model)
AIC(full.model)
step(full.model)
step(full.model)
step(full.model) %>%
summary()
step(full.model)
step(full.model) %>%
coef(full.model)
step(full.model)
step(full.model) %>%
coef()
step(full.model)
library(MASS)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
stepAIC(full.model)
library(MASS)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
stepAIC(full.model)
library(MASS)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
stepAIC(full.model, trace = F)
step(full.model)
step(full.model, trace=F)
full.model <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(full.model)
step(full.model)
step(full.model, trace=F)
# to just print out the best model
step(full.model, trace=F)
viagra.model <-glm(factor(spam) ~ viagra,
data = email,
family = "binomial")
summary(viagra.model)
model <- lm(Price ~ Size, data = house)
coef(model)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = coef(model)[2],
intercept = coef(model)[1],
color = "red",
size = 1) +
theme_light()
library(MASS)
full.model <-glm(factor(spam) ~ .,
data = email,
family = "binomial")
stepAIC(full.model, trace = F)
winner.model <-glm(factor(spam) ~ winner,
data = email,
family = "binomial")
summary(winner.model)
viagra.model <-glm(factor(spam) ~ viagra,
data = email,
family = "binomial")
summary(viagra.model)
newdata = data.frame(winner=0)
predict(winner.model, newdata, type="response")
newdata = data.frame(winner="0")
predict(winner.model, newdata, type="response")
newdata = data.frame(winner=as.factor(0))
predict(winner.model, newdata, type="response")
newdata = data.frame(winner="yes")
predict(winner.model, newdata, type="response")
newdata = data.frame(winner="no")
predict(winner.model, newdata, type="response")
newdata = data.frame(winner="yes")
predict(winner.model, newdata, type="response")
newdata =
predict(winner.model, data.frame(winner="yes"), type="response")
predict(winner.model, data.frame(winner="yes"), type="response")
predict(winner.model, data.frame(winner="yes"), type="response")
predict(winner.model, data.frame(winner="no"), type="response")
table(email$spam, email$viagra)
winner.model <-glm(factor(spam) ~ winner,
data = email,
family = "binomial")
summary(winner.model)
predict(winner.model, data.frame(winner="yes"), type="response")
predict(winner.model, data.frame(winner="no"), type="response")
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
head(house)
house <- read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/HousePrices.csv")
head(house)
View(house)
table(house$Beds)
house %>%
ggplot(aes(x = Price)) +
geom_histogram(bins=10) +
theme_light()
house %>%
ggplot(aes(x = Price)) +
geom_histogram(bins=15) +
theme_light()
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
theme_light()
lm(Price ~ Size, data = house)
#lm = linear model
model <- lm(Price ~ Size, data = house)
coef(model)
house %>%
ggplot(aes(x = Size,
y = Price)) +
geom_point() +
geom_abline(slope = coef(model)[2],
intercept = coef(model)[1],
color = "red",
size = 1) +
theme_light()
plot(model)
predict.lm(model, data.frame(Size = 2000))
full.model <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(full.model)
full.model <- lm(Price ~ Size + Beds + Baths + New, data=house)
summary(full.model)
#to see the steps
step(full.model)
# to just print out the best model
step(full.model, trace=F)
library(openintro)
data("email")
force(email)
View(email)
?email
viagra.model <-glm(factor(spam) ~ viagra,
data = email,
family = "binomial")
summary(viagra.model)
winner.model <-glm(factor(spam) ~ winner,
data = email,
family = "binomial")
summary(winner.model)
predict(winner.model, data.frame(winner="yes"), type="response")
predict(winner.model, data.frame(winner="no"), type="response")
taboo <-read.csv("https://ebmwhite.github.io/MATH0216/assignments/taboo.csv")
taboo <-read.csv("https://ebmwhite.github.io/MATH0216/assignments/taboo.csv")
taboo <-read.csv("https://ebmwhite.github.io/MATH0216/assignments/taboo.csv")
taboo <-read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/assignments/taboo.csv")
taboo <-read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/assignments/taboo.csv")
?which
which(total >=40)
which(total_sort$total >=40)
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points, na.rm=T))
set.seed(1)
totals$key <- distinctColorPalette(26)
set.seed(1)
totals$key2 <- sample(letters)
total_sort<- totals %>%
select(total, key2) %>%
arrange(-total)
View(totals)
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/Jamesetal2015Experiment2.csv")
#condition is only coded as 1,2,3,4 -- this relabels them
all_data$Condition <- as.factor(all_data$Condition)
levels(all_data$Condition) <- c("Control",
"Reactivation+Tetris",
"Tetris_only",
"Reactivation_only")
setwd("~/Google Drive/MATH0216/GitHub/data")
write.csv(all_data, "tetris.csv")
#read in the data from website, ensure you are connected to the internet
all_data<-read.csv("https://raw.githubusercontent.com/ebmwhite/MATH0216/master/data/tetris.csv")
library(gsheet)
library(tidyverse)
library(randomcoloR)
library(kableExtra)
data <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1-5Tz0ogZvO2k1Dv1lIW8W_YuY0qH2AZb1MmZmN6_wy4/edit?usp=sharing')
totals <- data %>%
group_by(Name) %>%
summarize(total = sum(Points, na.rm=T))
set.seed(1)
totals$key <- distinctColorPalette(26)
set.seed(1)
totals$key2 <- sample(letters)
total_sort<- totals %>%
select(total, key2) %>%
arrange(-total)
View(totals)
?qt
qt(0.05, 10)
